{
  "version": 3,
  "sources": ["../../vuetify/src/components/VSelect/VSelect.tsx", "../../vuetify/src/components/VChip/VChip.tsx", "../../vuetify/src/components/VChipGroup/VChipGroup.tsx", "../../vuetify/src/components/VSlideGroup/VSlideGroup.tsx", "../../vuetify/src/components/VSlideGroup/helpers.ts", "../../vuetify/src/components/VMenu/VMenu.tsx", "../../vuetify/src/components/VVirtualScroll/VVirtualScroll.tsx", "../../vuetify/src/components/VVirtualScroll/VVirtualScrollItem.tsx", "../../vuetify/src/composables/virtual.ts", "../../vuetify/src/components/VSelect/useScrolling.ts"],
  "sourcesContent": ["// Styles\nimport './VSelect.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { makeVTextFieldProps, VTextField } from '@/components/VTextField/VTextField'\nimport { VVirtualScroll } from '@/components/VVirtualScroll'\n\n// Composables\nimport { useScrolling } from './useScrolling'\nimport { useForm } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { IconValue } from '@/composables/icons'\nimport { makeItemsProps, useItems } from '@/composables/list-items'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTransitionProps } from '@/composables/transition'\n\n// Utilities\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from 'vue'\nimport {\n  ensureValidVNode,\n  genericComponent,\n  IN_BROWSER,\n  matchesSelector,\n  omit,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { Component, PropType } from 'vue'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { ListItem } from '@/composables/list-items'\nimport type { GenericProps, SelectItemKey } from '@/util'\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = [T] extends [Primitive]\n  ? T\n  : (ReturnObject extends true ? T : any)\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject> | null\n\nexport const makeSelectProps = propsFactory({\n  chips: Boolean,\n  closableChips: Boolean,\n  closeText: {\n    type: String,\n    default: '$vuetify.close',\n  },\n  openText: {\n    type: String,\n    default: '$vuetify.open',\n  },\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  listProps: {\n    type: Object as PropType<VList['$props']>,\n  },\n  menu: Boolean,\n  menuIcon: {\n    type: IconValue,\n    default: '$dropdown',\n  },\n  menuProps: {\n    type: Object as PropType<VMenu['$props']>,\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText',\n  },\n  openOnClear: Boolean,\n  itemColor: String,\n\n  ...makeItemsProps({ itemChildren: false }),\n}, 'Select')\n\nexport const makeVSelectProps = propsFactory({\n  ...makeSelectProps(),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: 'combobox',\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\n  ...makeTransitionProps({ transition: { component: VDialogTransition as Component } }),\n}, 'VSelect')\n\ntype ItemType<T> = T extends readonly (infer U)[] ? U : never\n\nexport const VSelect = genericComponent<new <\n  T extends readonly any[],\n  Item = ItemType<T>,\n  ReturnObject extends boolean = false,\n  Multiple extends boolean = false,\n  V extends Value<Item, ReturnObject, Multiple> = Value<Item, ReturnObject, Multiple>\n>(\n  props: {\n    items?: T\n    itemTitle?: SelectItemKey<ItemType<T>>\n    itemValue?: SelectItemKey<ItemType<T>>\n    itemProps?: SelectItemKey<ItemType<T>>\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V | null\n    'onUpdate:modelValue'?: (value: V) => void\n  },\n  slots: Omit<VInputSlots & VFieldSlots, 'default'> & {\n    item: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    chip: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    selection: { item: ListItem<Item>, index: number }\n    'prepend-item': never\n    'append-item': never\n    'no-data': never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelect',\n\n  props: makeVSelectProps(),\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (value: any) => true,\n    'update:menu': (ue: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const vMenuRef = ref<VMenu>()\n    const vVirtualScrollRef = ref<VVirtualScroll>()\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.Î¨openChildren) return\n        _menu.value = v\n      },\n    })\n    const { items, transformIn, transformOut } = useItems(props)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(v === null ? [null] : wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value)\n        : typeof props.counterValue === 'number' ? props.counterValue\n        : model.value.length\n    })\n    const form = useForm()\n    const selectedValues = computed(() => model.value.map(selection => selection.value))\n    const isFocused = shallowRef(false)\n    const label = computed(() => menu.value ? props.closeText : props.openText)\n\n    let keyboardLookupPrefix = ''\n    let keyboardLookupLastTime: number\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return items.value.filter(item => !model.value.some(s => s === item))\n      }\n      return items.value\n    })\n\n    const menuDisabled = computed(() => (\n      (props.hideNoData && !displayItems.value.length) ||\n      props.readonly || form?.isReadonly.value\n    ))\n\n    const computedMenuProps = computed(() => {\n      return {\n        ...props.menuProps,\n        activatorProps: {\n          ...(props.menuProps?.activatorProps || {}),\n          'aria-haspopup': 'listbox', // Set aria-haspopup to 'listbox'\n        },\n      }\n    })\n\n    const listRef = ref<VList>()\n    const { onListScroll, onListKeydown } = useScrolling(listRef, vTextFieldRef)\n    function onClear (e: MouseEvent) {\n      if (props.openOnClear) {\n        menu.value = true\n      }\n    }\n    function onMousedownControl () {\n      if (menuDisabled.value) return\n\n      menu.value = !menu.value\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (!e.key || props.readonly || form?.isReadonly.value) return\n\n      if (['Enter', ' ', 'ArrowDown', 'ArrowUp', 'Home', 'End'].includes(e.key)) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape', 'Tab'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (e.key === 'Home') {\n        listRef.value?.focus('first')\n      } else if (e.key === 'End') {\n        listRef.value?.focus('last')\n      }\n\n      // html select hotkeys\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n\n      function checkPrintable (e: KeyboardEvent) {\n        const isPrintableChar = e.key.length === 1\n        const noModifier = !e.ctrlKey && !e.metaKey && !e.altKey\n        return isPrintableChar && noModifier\n      }\n\n      if (props.multiple || !checkPrintable(e)) return\n\n      const now = performance.now()\n      if (now - keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        keyboardLookupPrefix = ''\n      }\n      keyboardLookupPrefix += e.key.toLowerCase()\n      keyboardLookupLastTime = now\n\n      const item = items.value.find(item => item.title.toLowerCase().startsWith(keyboardLookupPrefix))\n      if (item !== undefined) {\n        model.value = [item]\n      }\n    }\n\n    /** @param set - null means toggle */\n    function select (item: ListItem, set: boolean | null = true) {\n      if (item.props.disabled) return\n\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => props.valueComparator(selection.value, item.value))\n        const add = set == null ? !~index : set\n\n        if (~index) {\n          const value = add ? [...model.value, item] : [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        } else if (add) {\n          model.value = [...model.value, item]\n        }\n      } else {\n        const add = set !== false\n        model.value = add ? [item] : []\n\n        nextTick(() => {\n          menu.value = false\n        })\n      }\n    }\n    function onBlur (e: FocusEvent) {\n      if (!listRef.value?.$el.contains(e.relatedTarget as HTMLElement)) {\n        menu.value = false\n      }\n    }\n    function onAfterLeave () {\n      if (isFocused.value) {\n        vTextFieldRef.value?.focus()\n      }\n    }\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n    }\n    function onModelUpdate (v: any) {\n      if (v == null) model.value = []\n      else if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\n        const item = items.value.find(item => item.title === v)\n        if (item) {\n          select(item)\n        }\n      } else if (vTextFieldRef.value) {\n        vTextFieldRef.value.value = ''\n      }\n    }\n\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex(\n          item => model.value.some(s => props.valueComparator(s.value, item.value))\n        )\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    })\n\n    watch(() => props.items, (newVal, oldVal) => {\n      if (menu.value) return\n\n      if (isFocused.value && !oldVal.length && newVal.length) {\n        menu.value = true\n      }\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n      const hasList = !!(\n        (!props.hideNoData || displayItems.value.length) ||\n        slots['prepend-item'] ||\n        slots['append-item'] ||\n        slots['no-data']\n      )\n      const isDirty = model.value.length > 0\n      const textFieldProps = VTextField.filterProps(props)\n\n      const placeholder = isDirty || (\n        !isFocused.value &&\n        props.label &&\n        !props.persistentPlaceholder\n      ) ? undefined : props.placeholder\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          modelValue={ model.value.map(v => v.props.value).join(', ') }\n          onUpdate:modelValue={ onModelUpdate }\n          v-model:focused={ isFocused.value }\n          validationValue={ model.externalValue }\n          counterValue={ counterValue.value }\n          dirty={ isDirty }\n          class={[\n            'v-select',\n            {\n              'v-select--active-menu': menu.value,\n              'v-select--chips': !!props.chips,\n              [`v-select--${props.multiple ? 'multiple' : 'single'}`]: true,\n              'v-select--selected': model.value.length,\n              'v-select--selection-slot': !!slots.selection,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          inputmode=\"none\"\n          placeholder={ placeholder }\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onBlur={ onBlur }\n          onKeydown={ onKeydown }\n          aria-label={ t(label.value) }\n          title={ t(label.value) }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-select__content\"\n                  disabled={ menuDisabled.value }\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  onAfterLeave={ onAfterLeave }\n                  { ...computedMenuProps.value }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selectedValues.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onKeydown={ onListKeydown }\n                      onFocusin={ onFocusin }\n                      onScrollPassive={ onListScroll }\n                      tabindex=\"-1\"\n                      aria-live=\"polite\"\n                      color={ props.itemColor ?? props.color }\n                      { ...props.listProps }\n                    >\n                      { slots['prepend-item']?.() }\n\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem title={ t(props.noDataText) } />\n                      ))}\n\n                      <VVirtualScroll ref={ vVirtualScrollRef } renderless items={ displayItems.value }>\n                        { ({ item, index, itemRef }) => {\n                          const itemProps = mergeProps(item.props, {\n                            ref: itemRef,\n                            key: index,\n                            onClick: () => select(item, null),\n                          })\n\n                          return slots.item?.({\n                            item,\n                            index,\n                            props: itemProps,\n                          }) ?? (\n                            <VListItem { ...itemProps } role=\"option\">\n                              {{\n                                prepend: ({ isSelected }) => (\n                                  <>\n                                    { props.multiple && !props.hideSelected ? (\n                                      <VCheckboxBtn\n                                        key={ item.value }\n                                        modelValue={ isSelected }\n                                        ripple={ false }\n                                        tabindex=\"-1\"\n                                      />\n                                    ) : undefined }\n\n                                    { item.props.prependAvatar && (\n                                      <VAvatar image={ item.props.prependAvatar } />\n                                    )}\n\n                                    { item.props.prependIcon && (\n                                      <VIcon icon={ item.props.prependIcon } />\n                                    )}\n                                  </>\n                                ),\n                              }}\n                            </VListItem>\n                          )\n                        }}\n                      </VVirtualScroll>\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  )}\n                </VMenu>\n\n                { model.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item, false)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    onKeydown (e: KeyboardEvent) {\n                      if (e.key !== 'Enter' && e.key !== ' ') return\n\n                      e.preventDefault()\n                      e.stopPropagation()\n\n                      onChipClose(e)\n                    },\n                    onMousedown (e: MouseEvent) {\n                      e.preventDefault()\n                      e.stopPropagation()\n                    },\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  const hasSlot = hasChips ? !!slots.chip : !!slots.selection\n                  const slotContent = hasSlot\n                    ? ensureValidVNode(\n                      hasChips\n                        ? slots.chip!({ item, index, props: slotProps })\n                        : slots.selection!({ item, index })\n                    )\n                    : undefined\n\n                  if (hasSlot && !slotContent) return undefined\n\n                  return (\n                    <div key={ item.value } class=\"v-select__selection\">\n                      { hasChips ? (\n                        !slots.chip ? (\n                          <VChip\n                            key=\"chip\"\n                            closable={ props.closableChips }\n                            size=\"small\"\n                            text={ item.title }\n                            disabled={ item.props.disabled }\n                            { ...slotProps }\n                          />\n                        ) : (\n                          <VDefaultsProvider\n                            key=\"chip-defaults\"\n                            defaults={{\n                              VChip: {\n                                closable: props.closableChips,\n                                size: 'small',\n                                text: item.title,\n                              },\n                            }}\n                          >\n                            { slotContent }\n                          </VDefaultsProvider>\n                        )\n                      ) : (\n                        slotContent ?? (\n                          <span class=\"v-select__selection-text\">\n                            { item.title }\n                            { props.multiple && (index < model.value.length - 1) && (\n                              <span class=\"v-select__selection-comma\">,</span>\n                            )}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  )\n                })}\n              </>\n            ),\n            'append-inner': (...args) => (\n              <>\n                { slots['append-inner']?.(...args) }\n                { props.menuIcon ? (\n                  <VIcon\n                    class=\"v-select__menu-icon\"\n                    icon={ props.menuIcon }\n                  />\n                ) : undefined }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      isFocused,\n      menu,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VSelect = InstanceType<typeof VSelect>\n", "/* eslint-disable complexity */\n// Styles\nimport './VChip.sass'\n\n// Components\nimport { VExpandXTransition } from '@/components/transitions'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VChipGroupSymbol } from '@/components/VChipGroup/VChipGroup'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { IconValue } from '@/composables/icons'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed } from 'vue'\nimport { EventProp, genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { RippleDirectiveBinding } from '@/directives/ripple'\n\nexport type VChipSlots = {\n  default: {\n    isSelected: boolean | undefined\n    selectedClass: boolean | (string | undefined)[] | undefined\n    select: ((value: boolean) => void) | undefined\n    toggle: (() => void) | undefined\n    value: unknown\n    disabled: boolean\n  }\n  label: never\n  prepend: never\n  append: never\n  close: never\n  filter: never\n}\n\nexport const makeVChipProps = propsFactory({\n  activeClass: String,\n  appendAvatar: String,\n  appendIcon: IconValue,\n  closable: Boolean,\n  closeIcon: {\n    type: IconValue,\n    default: '$delete',\n  },\n  closeLabel: {\n    type: String,\n    default: '$vuetify.close',\n  },\n  draggable: Boolean,\n  filter: Boolean,\n  filterIcon: {\n    type: String,\n    default: '$complete',\n  },\n  label: Boolean,\n  link: {\n    type: Boolean,\n    default: undefined,\n  },\n  pill: Boolean,\n  prependAvatar: String,\n  prependIcon: IconValue,\n  ripple: {\n    type: [Boolean, Object] as PropType<RippleDirectiveBinding['value']>,\n    default: true,\n  },\n  text: String,\n  modelValue: {\n    type: Boolean,\n    default: true,\n  },\n\n  onClick: EventProp<[MouseEvent]>(),\n  onClickOnce: EventProp<[MouseEvent]>(),\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeElevationProps(),\n  ...makeGroupItemProps(),\n  ...makeRoundedProps(),\n  ...makeRouterProps(),\n  ...makeSizeProps(),\n  ...makeTagProps({ tag: 'span' }),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'tonal' } as const),\n}, 'VChip')\n\nexport const VChip = genericComponent<VChipSlots>()({\n  name: 'VChip',\n\n  directives: { Ripple },\n\n  props: makeVChipProps(),\n\n  emits: {\n    'click:close': (e: MouseEvent) => true,\n    'update:modelValue': (value: boolean) => true,\n    'group:selected': (val: { value: boolean }) => true,\n    click: (e: MouseEvent | KeyboardEvent) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { t } = useLocale()\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses } = useSize(props)\n    const { themeClasses } = provideTheme(props)\n\n    const isActive = useProxiedModel(props, 'modelValue')\n    const group = useGroupItem(props, VChipGroupSymbol, false)\n    const link = useLink(props, attrs)\n    const isLink = computed(() => props.link !== false && link.isLink.value)\n    const isClickable = computed(() =>\n      !props.disabled &&\n      props.link !== false &&\n      (!!group || props.link || link.isClickable.value)\n    )\n    const closeProps = computed(() => ({\n      'aria-label': t(props.closeLabel),\n      onClick (e: MouseEvent) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        isActive.value = false\n\n        emit('click:close', e)\n      },\n    }))\n\n    function onClick (e: MouseEvent) {\n      emit('click', e)\n\n      if (!isClickable.value) return\n\n      link.navigate?.(e)\n      group?.toggle()\n    }\n\n    function onKeyDown (e: KeyboardEvent) {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault()\n        onClick(e as any as MouseEvent)\n      }\n    }\n\n    return () => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasAppendMedia = !!(props.appendIcon || props.appendAvatar)\n      const hasAppend = !!(hasAppendMedia || slots.append)\n      const hasClose = !!(slots.close || props.closable)\n      const hasFilter = !!(slots.filter || props.filter) && group\n      const hasPrependMedia = !!(props.prependIcon || props.prependAvatar)\n      const hasPrepend = !!(hasPrependMedia || slots.prepend)\n      const hasColor = !group || group.isSelected.value\n\n      return isActive.value && (\n        <Tag\n          class={[\n            'v-chip',\n            {\n              'v-chip--disabled': props.disabled,\n              'v-chip--label': props.label,\n              'v-chip--link': isClickable.value,\n              'v-chip--filter': hasFilter,\n              'v-chip--pill': props.pill,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            hasColor ? colorClasses.value : undefined,\n            densityClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            sizeClasses.value,\n            variantClasses.value,\n            group?.selectedClass.value,\n            props.class,\n          ]}\n          style={[\n            hasColor ? colorStyles.value : undefined,\n            props.style,\n          ]}\n          disabled={ props.disabled || undefined }\n          draggable={ props.draggable }\n          href={ link.href.value }\n          tabindex={ isClickable.value ? 0 : undefined }\n          onClick={ onClick }\n          onKeydown={ isClickable.value && !isLink.value && onKeyDown }\n          v-ripple={[isClickable.value && props.ripple, null]}\n        >\n          { genOverlays(isClickable.value, 'v-chip') }\n\n          { hasFilter && (\n            <VExpandXTransition key=\"filter\">\n              <div\n                class=\"v-chip__filter\"\n                v-show={ group.isSelected.value }\n              >\n                { !slots.filter ? (\n                  <VIcon\n                    key=\"filter-icon\"\n                    icon={ props.filterIcon }\n                  />\n                ) : (\n                  <VDefaultsProvider\n                    key=\"filter-defaults\"\n                    disabled={ !props.filterIcon }\n                    defaults={{\n                      VIcon: { icon: props.filterIcon },\n                    }}\n                    v-slots:default={ slots.filter }\n                  />\n                )}\n              </div>\n            </VExpandXTransition>\n          )}\n\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-chip__prepend\">\n              { !slots.prepend ? (\n                <>\n                  { props.prependIcon && (\n                    <VIcon\n                      key=\"prepend-icon\"\n                      icon={ props.prependIcon }\n                      start\n                    />\n                  )}\n\n                  { props.prependAvatar && (\n                    <VAvatar\n                      key=\"prepend-avatar\"\n                      image={ props.prependAvatar }\n                      start\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !hasPrependMedia }\n                  defaults={{\n                    VAvatar: {\n                      image: props.prependAvatar,\n                      start: true,\n                    },\n                    VIcon: {\n                      icon: props.prependIcon,\n                      start: true,\n                    },\n                  }}\n                  v-slots:default={ slots.prepend }\n                />\n              )}\n            </div>\n          )}\n\n          <div class=\"v-chip__content\" data-no-activator=\"\">\n            { slots.default?.({\n              isSelected: group?.isSelected.value,\n              selectedClass: group?.selectedClass.value,\n              select: group?.select,\n              toggle: group?.toggle,\n              value: group?.value.value,\n              disabled: props.disabled,\n            }) ?? props.text }\n          </div>\n\n          { hasAppend && (\n            <div key=\"append\" class=\"v-chip__append\">\n              { !slots.append ? (\n                <>\n                  { props.appendIcon && (\n                    <VIcon\n                      key=\"append-icon\"\n                      end\n                      icon={ props.appendIcon }\n                    />\n                  )}\n\n                  { props.appendAvatar && (\n                    <VAvatar\n                      key=\"append-avatar\"\n                      end\n                      image={ props.appendAvatar }\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"append-defaults\"\n                  disabled={ !hasAppendMedia }\n                  defaults={{\n                    VAvatar: {\n                      end: true,\n                      image: props.appendAvatar,\n                    },\n                    VIcon: {\n                      end: true,\n                      icon: props.appendIcon,\n                    },\n                  }}\n                  v-slots:default={ slots.append }\n                />\n              )}\n            </div>\n          )}\n\n          { hasClose && (\n            <button\n              key=\"close\"\n              class=\"v-chip__close\"\n              type=\"button\"\n              { ...closeProps.value }\n            >\n              { !slots.close ? (\n                <VIcon\n                  key=\"close-icon\"\n                  icon={ props.closeIcon }\n                  size=\"x-small\"\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"close-defaults\"\n                  defaults={{\n                    VIcon: {\n                      icon: props.closeIcon,\n                      size: 'x-small',\n                    },\n                  }}\n                  v-slots:default={ slots.close }\n                />\n              )}\n            </button>\n          )}\n        </Tag>\n      )\n    }\n  },\n})\n\nexport type VChip = InstanceType<typeof VChip>\n", "// Styles\nimport './VChipGroup.sass'\n\n// Components\nimport { makeVSlideGroupProps, VSlideGroup } from '@/components/VSlideGroup/VSlideGroup'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeVariantProps } from '@/composables/variant'\n\n// Utilities\nimport { toRef } from 'vue'\nimport { deepEqual, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { GenericProps } from '@/util'\n\nexport const VChipGroupSymbol = Symbol.for('vuetify:v-chip-group')\n\nexport const makeVChipGroupProps = propsFactory({\n  column: Boolean,\n  filter: Boolean,\n  valueComparator: {\n    type: Function as PropType<typeof deepEqual>,\n    default: deepEqual,\n  },\n\n  ...makeVSlideGroupProps(),\n  ...makeComponentProps(),\n  ...makeGroupProps({ selectedClass: 'v-chip--selected' }),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'tonal' } as const),\n}, 'VChipGroup')\n\ntype VChipGroupSlots = {\n  default: {\n    isSelected: (id: number) => boolean\n    select: (id: number, value: boolean) => void\n    next: () => void\n    prev: () => void\n    selected: readonly number[]\n  }\n}\n\nexport const VChipGroup = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VChipGroupSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VChipGroup',\n\n  props: makeVChipGroupProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { isSelected, select, next, prev, selected } = useGroup(props, VChipGroupSymbol)\n\n    provideDefaults({\n      VChip: {\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n        filter: toRef(props, 'filter'),\n        variant: toRef(props, 'variant'),\n      },\n    })\n\n    useRender(() => {\n      const slideGroupProps = VSlideGroup.filterProps(props)\n\n      return (\n        <VSlideGroup\n          { ...slideGroupProps }\n          class={[\n            'v-chip-group',\n            {\n              'v-chip-group--column': props.column,\n            },\n            themeClasses.value,\n            props.class,\n          ]}\n          style={ props.style }\n        >\n          { slots.default?.({\n            isSelected,\n            select,\n            next,\n            prev,\n            selected: selected.value,\n          })}\n        </VSlideGroup>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VChipGroup = InstanceType<typeof VChipGroup>\n", "// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport { VFadeTransition } from '@/components/transitions'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDisplayProps, useDisplay } from '@/composables/display'\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { IconValue } from '@/composables/icons'\nimport { useRtl } from '@/composables/locale'\nimport { useResizeObserver } from '@/composables/resizeObserver'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed, shallowRef, watch } from 'vue'\nimport { bias, calculateCenteredOffset, calculateUpdatedOffset } from './helpers'\nimport { clamp, focusableChildren, genericComponent, IN_BROWSER, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType } from 'vue'\nimport type { GroupProvide } from '@/composables/group'\nimport type { GenericProps } from '@/util'\n\nexport const VSlideGroupSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-slide-group')\n\ninterface SlideGroupSlot {\n  next: GroupProvide['next']\n  prev: GroupProvide['prev']\n  select: GroupProvide['select']\n  isSelected: GroupProvide['isSelected']\n}\n\ntype VSlideGroupSlots = {\n  default: SlideGroupSlot\n  prev: SlideGroupSlot\n  next: SlideGroupSlot\n}\n\nexport const makeVSlideGroupProps = propsFactory({\n  centerActive: Boolean,\n  direction: {\n    type: String as PropType<'horizontal' | 'vertical'>,\n    default: 'horizontal',\n  },\n  symbol: {\n    type: null,\n    default: VSlideGroupSymbol,\n  },\n  nextIcon: {\n    type: IconValue,\n    default: '$next',\n  },\n  prevIcon: {\n    type: IconValue,\n    default: '$prev',\n  },\n  showArrows: {\n    type: [Boolean, String],\n    validator: (v: any) => (\n      typeof v === 'boolean' || [\n        'always',\n        'desktop',\n        'mobile',\n      ].includes(v)\n    ),\n  },\n\n  ...makeComponentProps(),\n  ...makeDisplayProps(),\n  ...makeTagProps(),\n  ...makeGroupProps({\n    selectedClass: 'v-slide-group-item--active',\n  }),\n}, 'VSlideGroup')\n\nexport const VSlideGroup = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VSlideGroupSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSlideGroup',\n\n  props: makeVSlideGroupProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { isRtl } = useRtl()\n    const { displayClasses, mobile } = useDisplay(props)\n    const group = useGroup(props, props.symbol)\n    const isOverflowing = shallowRef(false)\n    const scrollOffset = shallowRef(0)\n    const containerSize = shallowRef(0)\n    const contentSize = shallowRef(0)\n    const isHorizontal = computed(() => props.direction === 'horizontal')\n\n    const { resizeRef: containerRef, contentRect: containerRect } = useResizeObserver()\n    const { resizeRef: contentRef, contentRect } = useResizeObserver()\n\n    const firstSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[0])\n    })\n\n    const lastSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[group.selected.value.length - 1])\n    })\n\n    if (IN_BROWSER) {\n      let frame = -1\n      watch(() => [group.selected.value, containerRect.value, contentRect.value, isHorizontal.value], () => {\n        cancelAnimationFrame(frame)\n        frame = requestAnimationFrame(() => {\n          if (containerRect.value && contentRect.value) {\n            const sizeProperty = isHorizontal.value ? 'width' : 'height'\n\n            containerSize.value = containerRect.value[sizeProperty]\n            contentSize.value = contentRect.value[sizeProperty]\n\n            isOverflowing.value = containerSize.value + 1 < contentSize.value\n          }\n\n          if (firstSelectedIndex.value >= 0 && contentRef.value) {\n            // TODO: Is this too naive? Should we store element references in group composable?\n            const selectedElement = contentRef.value.children[lastSelectedIndex.value] as HTMLElement\n\n            if (firstSelectedIndex.value === 0 || !isOverflowing.value) {\n              scrollOffset.value = 0\n            } else if (props.centerActive) {\n              scrollOffset.value = calculateCenteredOffset({\n                selectedElement,\n                containerSize: containerSize.value,\n                contentSize: contentSize.value,\n                isRtl: isRtl.value,\n                isHorizontal: isHorizontal.value,\n              })\n            } else if (isOverflowing.value) {\n              scrollOffset.value = calculateUpdatedOffset({\n                selectedElement,\n                containerSize: containerSize.value,\n                contentSize: contentSize.value,\n                isRtl: isRtl.value,\n                currentScrollOffset: scrollOffset.value,\n                isHorizontal: isHorizontal.value,\n              })\n            }\n          }\n        })\n      })\n    }\n\n    const disableTransition = shallowRef(false)\n\n    let startTouch = 0\n    let startOffset = 0\n\n    function onTouchstart (e: TouchEvent) {\n      const sizeProperty = isHorizontal.value ? 'clientX' : 'clientY'\n      const sign = isRtl.value && isHorizontal.value ? -1 : 1\n      startOffset = sign * scrollOffset.value\n      startTouch = e.touches[0][sizeProperty]\n      disableTransition.value = true\n    }\n\n    function onTouchmove (e: TouchEvent) {\n      if (!isOverflowing.value) return\n\n      const sizeProperty = isHorizontal.value ? 'clientX' : 'clientY'\n      const sign = isRtl.value && isHorizontal.value ? -1 : 1\n      scrollOffset.value = sign * (startOffset + startTouch - e.touches[0][sizeProperty])\n    }\n\n    function onTouchend (e: TouchEvent) {\n      const maxScrollOffset = contentSize.value - containerSize.value\n\n      if (scrollOffset.value < 0 || !isOverflowing.value) {\n        scrollOffset.value = 0\n      } else if (scrollOffset.value >= maxScrollOffset) {\n        scrollOffset.value = maxScrollOffset\n      }\n\n      disableTransition.value = false\n    }\n\n    function onScroll () {\n      if (!containerRef.value) return\n\n      containerRef.value[isHorizontal.value ? 'scrollLeft' : 'scrollTop'] = 0\n    }\n\n    const isFocused = shallowRef(false)\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n\n      if (!isOverflowing.value || !contentRef.value) return\n\n      // Focused element is likely to be the root of an item, so a\n      // breadth-first search will probably find it in the first iteration\n      for (const el of e.composedPath()) {\n        for (const item of contentRef.value.children) {\n          if (item === el) {\n            scrollOffset.value = calculateUpdatedOffset({\n              selectedElement: item as HTMLElement,\n              containerSize: containerSize.value,\n              contentSize: contentSize.value,\n              isRtl: isRtl.value,\n              currentScrollOffset: scrollOffset.value,\n              isHorizontal: isHorizontal.value,\n            })\n            return\n          }\n        }\n      }\n    }\n\n    function onFocusout (e: FocusEvent) {\n      isFocused.value = false\n    }\n\n    function onFocus (e: FocusEvent) {\n      if (\n        !isFocused.value &&\n        !(e.relatedTarget && contentRef.value?.contains(e.relatedTarget as Node))\n      ) focus()\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (!contentRef.value) return\n\n      if (isHorizontal.value) {\n        if (e.key === 'ArrowRight') {\n          focus(isRtl.value ? 'prev' : 'next')\n        } else if (e.key === 'ArrowLeft') {\n          focus(isRtl.value ? 'next' : 'prev')\n        }\n      } else {\n        if (e.key === 'ArrowDown') {\n          focus('next')\n        } else if (e.key === 'ArrowUp') {\n          focus('prev')\n        }\n      }\n\n      if (e.key === 'Home') {\n        focus('first')\n      } else if (e.key === 'End') {\n        focus('last')\n      }\n    }\n\n    function focus (location?: 'next' | 'prev' | 'first' | 'last') {\n      if (!contentRef.value) return\n\n      if (!location) {\n        const focusable = focusableChildren(contentRef.value)\n        focusable[0]?.focus()\n      } else if (location === 'next') {\n        const el = contentRef.value.querySelector(':focus')?.nextElementSibling as HTMLElement | undefined\n        if (el) el.focus()\n        else focus('first')\n      } else if (location === 'prev') {\n        const el = contentRef.value.querySelector(':focus')?.previousElementSibling as HTMLElement | undefined\n        if (el) el.focus()\n        else focus('last')\n      } else if (location === 'first') {\n        (contentRef.value.firstElementChild as HTMLElement)?.focus()\n      } else if (location === 'last') {\n        (contentRef.value.lastElementChild as HTMLElement)?.focus()\n      }\n    }\n\n    function scrollTo (location: 'prev' | 'next') {\n      const newAbsoluteOffset = scrollOffset.value + (location === 'prev' ? -1 : 1) * containerSize.value\n\n      scrollOffset.value = clamp(newAbsoluteOffset, 0, contentSize.value - containerSize.value)\n    }\n\n    const contentStyles = computed(() => {\n      // This adds friction when scrolling the 'wrong' way when at max offset\n      let scrollAmount = scrollOffset.value > contentSize.value - containerSize.value\n        ? -(contentSize.value - containerSize.value) + bias(contentSize.value - containerSize.value - scrollOffset.value)\n        : -scrollOffset.value\n\n      // This adds friction when scrolling the 'wrong' way when at min offset\n      if (scrollOffset.value <= 0) {\n        scrollAmount = bias(-scrollOffset.value)\n      }\n\n      const sign = isRtl.value && isHorizontal.value ? -1 : 1\n      return {\n        transform: `translate${isHorizontal.value ? 'X' : 'Y'}(${sign * scrollAmount}px)`,\n        transition: disableTransition.value ? 'none' : '',\n        willChange: disableTransition.value ? 'transform' : '',\n      }\n    })\n\n    const slotProps = computed(() => ({\n      next: group.next,\n      prev: group.prev,\n      select: group.select,\n      isSelected: group.isSelected,\n    }))\n\n    const hasAffixes = computed(() => {\n      switch (props.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !mobile.value\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return isOverflowing.value || Math.abs(scrollOffset.value) > 0\n\n        // Always show on mobile\n        case 'mobile': return (\n          mobile.value ||\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !mobile.value &&\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n      }\n    })\n\n    const hasPrev = computed(() => {\n      return Math.abs(scrollOffset.value) > 0\n    })\n\n    const hasNext = computed(() => {\n      // Check one scroll ahead to know the width of right-most item\n      return contentSize.value > Math.abs(scrollOffset.value) + containerSize.value\n    })\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-slide-group',\n          {\n            'v-slide-group--vertical': !isHorizontal.value,\n            'v-slide-group--has-affixes': hasAffixes.value,\n            'v-slide-group--is-overflowing': isOverflowing.value,\n          },\n          displayClasses.value,\n          props.class,\n        ]}\n        style={ props.style }\n        tabindex={ (isFocused.value || group.selected.value.length) ? -1 : 0 }\n        onFocus={ onFocus }\n      >\n        { hasAffixes.value && (\n          <div\n            key=\"prev\"\n            class={[\n              'v-slide-group__prev',\n              { 'v-slide-group__prev--disabled': !hasPrev.value },\n            ]}\n            onClick={ () => hasPrev.value && scrollTo('prev') }\n          >\n            { slots.prev?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ isRtl.value ? props.nextIcon : props.prevIcon }></VIcon>\n              </VFadeTransition>\n            )}\n          </div>\n        )}\n\n        <div\n          key=\"container\"\n          ref={ containerRef }\n          class=\"v-slide-group__container\"\n          onScroll={ onScroll }\n        >\n          <div\n            ref={ contentRef }\n            class=\"v-slide-group__content\"\n            style={ contentStyles.value }\n            onTouchstartPassive={ onTouchstart }\n            onTouchmovePassive={ onTouchmove }\n            onTouchendPassive={ onTouchend }\n            onFocusin={ onFocusin }\n            onFocusout={ onFocusout }\n            onKeydown={ onKeydown }\n          >\n            { slots.default?.(slotProps.value) }\n          </div>\n        </div>\n\n        { hasAffixes.value && (\n          <div\n            key=\"next\"\n            class={[\n              'v-slide-group__next',\n              { 'v-slide-group__next--disabled': !hasNext.value },\n            ]}\n            onClick={ () => hasNext.value && scrollTo('next') }\n          >\n            { slots.next?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ isRtl.value ? props.prevIcon : props.nextIcon }></VIcon>\n              </VFadeTransition>\n            )}\n          </div>\n        )}\n      </props.tag>\n    ))\n\n    return {\n      selected: group.selected,\n      scrollTo,\n      scrollOffset,\n      focus,\n    }\n  },\n})\n\nexport type VSlideGroup = InstanceType<typeof VSlideGroup>\n", "export function bias (val: number) {\n  const c = 0.501\n  const x = Math.abs(val)\n  return Math.sign(val) * (x / ((1 / c - 2) * (1 - x) + 1))\n}\n\nexport function calculateUpdatedOffset ({\n  selectedElement,\n  containerSize,\n  contentSize,\n  isRtl,\n  currentScrollOffset,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerSize: number\n  contentSize: number\n  isRtl: boolean\n  currentScrollOffset: number\n  isHorizontal: boolean\n}): number {\n  const clientSize = isHorizontal ? selectedElement.clientWidth : selectedElement.clientHeight\n  const offsetStart = isHorizontal ? selectedElement.offsetLeft : selectedElement.offsetTop\n  const adjustedOffsetStart = isRtl && isHorizontal ? (contentSize - offsetStart - clientSize) : offsetStart\n\n  const totalSize = containerSize + currentScrollOffset\n  const itemOffset = clientSize + adjustedOffsetStart\n  const additionalOffset = clientSize * 0.4\n\n  if (adjustedOffsetStart <= currentScrollOffset) {\n    currentScrollOffset = Math.max(adjustedOffsetStart - additionalOffset, 0)\n  } else if (totalSize <= itemOffset) {\n    currentScrollOffset = Math.min(currentScrollOffset - (totalSize - itemOffset - additionalOffset), contentSize - containerSize)\n  }\n\n  return currentScrollOffset\n}\n\nexport function calculateCenteredOffset ({\n  selectedElement,\n  containerSize,\n  contentSize,\n  isRtl,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerSize: number\n  contentSize: number\n  isRtl: boolean\n  isHorizontal: boolean\n}): number {\n  const clientSize = isHorizontal ? selectedElement.clientWidth : selectedElement.clientHeight\n  const offsetStart = isHorizontal ? selectedElement.offsetLeft : selectedElement.offsetTop\n\n  const offsetCentered = isRtl && isHorizontal\n    ? contentSize - offsetStart - clientSize / 2 - containerSize / 2\n    : offsetStart + clientSize / 2 - containerSize / 2\n\n  return Math.min(contentSize - containerSize, Math.max(0, offsetCentered))\n}\n", "// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VOverlay } from '@/components/VOverlay'\nimport { makeVOverlayProps } from '@/components/VOverlay/VOverlay'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useScopeId } from '@/composables/scopeId'\n\n// Utilities\nimport { computed, inject, mergeProps, nextTick, provide, ref, shallowRef, watch } from 'vue'\nimport { VMenuSymbol } from './shared'\nimport {\n  focusableChildren,\n  focusChild,\n  genericComponent,\n  getNextElement,\n  getUid,\n  isClickInsideElement,\n  omit,\n  propsFactory,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { Component } from 'vue'\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\n\nexport const makeVMenuProps = propsFactory({\n  // TODO\n  // disableKeys: Boolean,\n  id: String,\n\n  ...omit(makeVOverlayProps({\n    closeDelay: 250,\n    closeOnContentClick: true,\n    locationStrategy: 'connected' as const,\n    openDelay: 300,\n    scrim: false,\n    scrollStrategy: 'reposition' as const,\n    transition: { component: VDialogTransition as Component },\n  }), ['absolute']),\n}, 'VMenu')\n\nexport const VMenu = genericComponent<OverlaySlots>()({\n  name: 'VMenu',\n\n  props: makeVMenuProps(),\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { scopeId } = useScopeId()\n\n    const uid = getUid()\n    const id = computed(() => props.id || `v-menu-${uid}`)\n\n    const overlay = ref<VOverlay>()\n\n    const parent = inject(VMenuSymbol, null)\n    const openChildren = shallowRef(0)\n    provide(VMenuSymbol, {\n      register () {\n        ++openChildren.value\n      },\n      unregister () {\n        --openChildren.value\n      },\n      closeParents (e) {\n        setTimeout(() => {\n          if (!openChildren.value &&\n            (e == null || (e && !isClickInsideElement(e, overlay.value!.contentEl!)))\n          ) {\n            isActive.value = false\n            parent?.closeParents()\n          }\n        }, 40)\n      },\n    })\n\n    async function onFocusIn (e: FocusEvent) {\n      const before = e.relatedTarget as HTMLElement | null\n      const after = e.target as HTMLElement | null\n\n      await nextTick()\n\n      if (\n        isActive.value &&\n        before !== after &&\n        overlay.value?.contentEl &&\n        // We're the topmost menu\n        overlay.value?.globalTop &&\n        // It isn't the document or the menu body\n        ![document, overlay.value.contentEl].includes(after!) &&\n        // It isn't inside the menu body\n        !overlay.value.contentEl.contains(after)\n      ) {\n        const focusable = focusableChildren(overlay.value.contentEl)\n        focusable[0]?.focus()\n      }\n    }\n\n    watch(isActive, val => {\n      if (val) {\n        parent?.register()\n        document.addEventListener('focusin', onFocusIn, { once: true })\n      } else {\n        parent?.unregister()\n        document.removeEventListener('focusin', onFocusIn)\n      }\n    })\n\n    function onClickOutside (e: MouseEvent) {\n      parent?.closeParents(e)\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (props.disabled) return\n\n      if (e.key === 'Tab') {\n        const nextElement = getNextElement(\n          focusableChildren(overlay.value?.contentEl as Element, false),\n          e.shiftKey ? 'prev' : 'next',\n          (el: HTMLElement) => el.tabIndex >= 0\n        )\n        if (!nextElement) {\n          isActive.value = false\n          overlay.value?.activatorEl?.focus()\n        }\n      } else if (['Enter', ' '].includes(e.key) && props.closeOnContentClick) {\n        isActive.value = false\n        parent?.closeParents()\n      }\n    }\n\n    function onActivatorKeydown (e: KeyboardEvent) {\n      if (props.disabled) return\n\n      const el = overlay.value?.contentEl\n      if (el && isActive.value) {\n        if (e.key === 'ArrowDown') {\n          e.preventDefault()\n          focusChild(el, 'next')\n        } else if (e.key === 'ArrowUp') {\n          e.preventDefault()\n          focusChild(el, 'prev')\n        }\n      } else if (['ArrowDown', 'ArrowUp'].includes(e.key)) {\n        isActive.value = true\n        e.preventDefault()\n        setTimeout(() => setTimeout(() => onActivatorKeydown(e)))\n      }\n    }\n\n    const activatorProps = computed(() =>\n      mergeProps({\n        'aria-haspopup': 'menu',\n        'aria-expanded': String(isActive.value),\n        'aria-owns': id.value,\n        onKeydown: onActivatorKeydown,\n      }, props.activatorProps)\n    )\n\n    useRender(() => {\n      const overlayProps = VOverlay.filterProps(props)\n\n      return (\n        <VOverlay\n          ref={ overlay }\n          id={ id.value }\n          class={[\n            'v-menu',\n            props.class,\n          ]}\n          style={ props.style }\n          { ...overlayProps }\n          v-model={ isActive.value }\n          absolute\n          activatorProps={ activatorProps.value }\n          onClick:outside={ onClickOutside }\n          onKeydown={ onKeydown }\n          { ...scopeId }\n        >\n          {{\n            activator: slots.activator,\n            default: (...args) => (\n              <VDefaultsProvider root=\"VMenu\">\n                { slots.default?.(...args) }\n              </VDefaultsProvider>\n            ),\n          }}\n        </VOverlay>\n      )\n    })\n\n    return forwardRefs({ id, Î¨openChildren: openChildren }, overlay)\n  },\n})\n\nexport type VMenu = InstanceType<typeof VMenu>\n", "// Styles\nimport './VVirtualScroll.sass'\n\n// Components\nimport { VVirtualScrollItem } from './VVirtualScrollItem'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { useToggleScope } from '@/composables/toggleScope'\nimport { makeVirtualProps, useVirtual } from '@/composables/virtual'\n\n// Utilities\nimport { onMounted, onScopeDispose, toRef } from 'vue'\nimport {\n  convertToUnit,\n  genericComponent,\n  getCurrentInstance,\n  getScrollParent,\n  propsFactory,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { GenericProps } from '@/util'\n\nexport interface VVirtualScrollSlot<T> {\n  item: T\n  index: number\n}\n\nexport const makeVVirtualScrollProps = propsFactory({\n  items: {\n    type: Array as PropType<readonly unknown[]>,\n    default: () => ([]),\n  },\n  renderless: Boolean,\n\n  ...makeVirtualProps(),\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n}, 'VVirtualScroll')\n\nexport const VVirtualScroll = genericComponent<new <T, Renderless extends boolean = false>(\n  props: {\n    items?: readonly T[]\n    renderless?: Renderless\n  },\n  slots: {\n    default: VVirtualScrollSlot<T> & (Renderless extends true ? {\n      itemRef: Ref<HTMLElement | undefined>\n    } : {})\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VVirtualScroll',\n\n  props: makeVVirtualScrollProps(),\n\n  setup (props, { slots }) {\n    const vm = getCurrentInstance('VVirtualScroll')\n    const { dimensionStyles } = useDimension(props)\n    const {\n      containerRef,\n      markerRef,\n      handleScroll,\n      handleScrollend,\n      handleItemResize,\n      scrollToIndex,\n      paddingTop,\n      paddingBottom,\n      computedItems,\n    } = useVirtual(props, toRef(props, 'items'))\n\n    useToggleScope(() => props.renderless, () => {\n      function handleListeners (add = false) {\n        const method = add ? 'addEventListener' : 'removeEventListener'\n\n        if (containerRef.value === document.documentElement) {\n          document[method]('scroll', handleScroll, { passive: true })\n          document[method]('scrollend', handleScrollend)\n        } else {\n          containerRef.value?.[method]('scroll', handleScroll, { passive: true })\n          containerRef.value?.[method]('scrollend', handleScrollend)\n        }\n      }\n\n      onMounted(() => {\n        containerRef.value = getScrollParent(vm.vnode.el as HTMLElement, true)\n        handleListeners(true)\n      })\n      onScopeDispose(handleListeners)\n    })\n\n    useRender(() => {\n      const children = computedItems.value.map(item => (\n        <VVirtualScrollItem\n          key={ item.index }\n          renderless={ props.renderless }\n          onUpdate:height={ height => handleItemResize(item.index, height) }\n        >\n          { slotProps => slots.default?.({ item: item.raw, index: item.index, ...slotProps }) }\n        </VVirtualScrollItem>\n      ))\n\n      return props.renderless ? (\n        <>\n          <div ref={ markerRef } class=\"v-virtual-scroll__spacer\" style={{ paddingTop: convertToUnit(paddingTop.value) }} />\n          { children }\n          <div class=\"v-virtual-scroll__spacer\" style={{ paddingBottom: convertToUnit(paddingBottom.value) }} />\n        </>\n      ) : (\n        <div\n          ref={ containerRef }\n          class={[\n            'v-virtual-scroll',\n            props.class,\n          ]}\n          onScrollPassive={ handleScroll }\n          onScrollend={ handleScrollend }\n          style={[\n            dimensionStyles.value,\n            props.style,\n          ]}\n        >\n          <div\n            ref={ markerRef }\n            class=\"v-virtual-scroll__container\"\n            style={{\n              paddingTop: convertToUnit(paddingTop.value),\n              paddingBottom: convertToUnit(paddingBottom.value),\n            }}\n          >\n            { children }\n          </div>\n        </div>\n      )\n    })\n\n    return {\n      scrollToIndex,\n    }\n  },\n})\n\nexport type VVirtualScroll = InstanceType<typeof VVirtualScroll>\n", "// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { watch } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\nimport type { GenericProps } from '@/util'\n\nexport const makeVVirtualScrollItemProps = propsFactory({\n  renderless: Boolean,\n\n  ...makeComponentProps(),\n}, 'VVirtualScrollItem')\n\nexport const VVirtualScrollItem = genericComponent<new <Renderless extends boolean = false>(\n  props: {\n    renderless?: Renderless\n  },\n  slots: {\n    default: Renderless extends true ? {\n      itemRef: Ref<HTMLElement | undefined>\n    } : never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VVirtualScrollItem',\n\n  inheritAttrs: false,\n\n  props: makeVVirtualScrollItemProps(),\n\n  emits: {\n    'update:height': (height: number) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { resizeRef, contentRect } = useResizeObserver(undefined, 'border')\n\n    watch(() => contentRect.value?.height, height => {\n      if (height != null) emit('update:height', height)\n    })\n\n    useRender(() => props.renderless ? (\n      <>\n        { slots.default?.({ itemRef: resizeRef }) }\n      </>\n    ) : (\n      <div\n        ref={ resizeRef }\n        class={[\n          'v-virtual-scroll__item',\n          props.class,\n        ]}\n        style={ props.style }\n        { ...attrs }\n      >\n        { (slots.default as any)?.() }\n      </div>\n    ))\n  },\n})\n", "// Composables\nimport { useDisplay } from '@/composables/display'\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { computed, nextTick, onScopeDispose, ref, shallowRef, watch, watchEffect } from 'vue'\nimport { clamp, debounce, IN_BROWSER, propsFactory } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\n\nconst UP = -1\nconst DOWN = 1\n\n/** Determines how large each batch of items should be */\nconst BUFFER_PX = 100\n\ntype VirtualProps = {\n  itemHeight?: number | string\n  height?: number | string\n}\n\nexport const makeVirtualProps = propsFactory({\n  itemHeight: {\n    type: [Number, String],\n    default: null,\n  },\n  height: [Number, String],\n}, 'virtual')\n\nexport function useVirtual <T> (props: VirtualProps, items: Ref<readonly T[]>) {\n  const display = useDisplay()\n\n  const itemHeight = shallowRef(0)\n  watchEffect(() => {\n    itemHeight.value = parseFloat(props.itemHeight || 0)\n  })\n\n  const first = shallowRef(0)\n  const last = shallowRef(Math.ceil(\n    // Assume 16px items filling the entire screen height if\n    // not provided. This is probably incorrect but it minimises\n    // the chance of ending up with empty space at the bottom.\n    // The default value is set here to avoid poisoning getSize()\n    (parseInt(props.height!) || display.height.value) / (itemHeight.value || 16)\n  ) || 1)\n  const paddingTop = shallowRef(0)\n  const paddingBottom = shallowRef(0)\n\n  /** The scrollable element */\n  const containerRef = ref<HTMLElement>()\n  /** An element marking the top of the scrollable area,\n   * used to add an offset if there's padding or other elements above the virtual list */\n  const markerRef = ref<HTMLElement>()\n  /** markerRef's offsetTop, lazily evaluated */\n  let markerOffset = 0\n\n  const { resizeRef, contentRect } = useResizeObserver()\n  watchEffect(() => {\n    resizeRef.value = containerRef.value\n  })\n  const viewportHeight = computed(() => {\n    return containerRef.value === document.documentElement\n      ? display.height.value\n      : contentRect.value?.height || parseInt(props.height!) || 0\n  })\n  /** All static elements have been rendered and we have an assumed item height */\n  const hasInitialRender = computed(() => {\n    return !!(containerRef.value && markerRef.value && viewportHeight.value && itemHeight.value)\n  })\n\n  let sizes = Array.from<number | null>({ length: items.value.length })\n  let offsets = Array.from<number>({ length: items.value.length })\n  const updateTime = shallowRef(0)\n  let targetScrollIndex = -1\n\n  function getSize (index: number) {\n    return sizes[index] || itemHeight.value\n  }\n\n  const updateOffsets = debounce(() => {\n    const start = performance.now()\n    offsets[0] = 0\n    const length = items.value.length\n    for (let i = 1; i <= length - 1; i++) {\n      offsets[i] = (offsets[i - 1] || 0) + getSize(i - 1)\n    }\n    updateTime.value = Math.max(updateTime.value, performance.now() - start)\n  }, updateTime)\n\n  const unwatch = watch(hasInitialRender, v => {\n    if (!v) return\n    // First render is complete, update offsets and visible\n    // items in case our assumed item height was incorrect\n\n    unwatch()\n    markerOffset = markerRef.value!.offsetTop\n    updateOffsets.immediate()\n    calculateVisibleItems()\n\n    if (!~targetScrollIndex) return\n\n    nextTick(() => {\n      IN_BROWSER && window.requestAnimationFrame(() => {\n        scrollToIndex(targetScrollIndex)\n        targetScrollIndex = -1\n      })\n    })\n  })\n\n  onScopeDispose(() => {\n    updateOffsets.clear()\n  })\n\n  function handleItemResize (index: number, height: number) {\n    const prevHeight = sizes[index]\n    const prevMinHeight = itemHeight.value\n\n    itemHeight.value = prevMinHeight ? Math.min(itemHeight.value, height) : height\n\n    if (prevHeight !== height || prevMinHeight !== itemHeight.value) {\n      sizes[index] = height\n      updateOffsets()\n    }\n  }\n\n  function calculateOffset (index: number) {\n    index = clamp(index, 0, items.value.length - 1)\n    return offsets[index] || 0\n  }\n\n  function calculateIndex (scrollTop: number) {\n    return binaryClosest(offsets, scrollTop)\n  }\n\n  let lastScrollTop = 0\n  let scrollVelocity = 0\n  let lastScrollTime = 0\n\n  watch(viewportHeight, (val, oldVal) => {\n    if (oldVal) {\n      calculateVisibleItems()\n      if (val < oldVal) {\n        requestAnimationFrame(() => {\n          scrollVelocity = 0\n          calculateVisibleItems()\n        })\n      }\n    }\n  })\n\n  function handleScroll () {\n    if (!containerRef.value || !markerRef.value) return\n\n    const scrollTop = containerRef.value.scrollTop\n    const scrollTime = performance.now()\n    const scrollDeltaT = scrollTime - lastScrollTime\n\n    if (scrollDeltaT > 500) {\n      scrollVelocity = Math.sign(scrollTop - lastScrollTop)\n\n      // Not super important, only update at the\n      // start of a scroll sequence to avoid reflows\n      markerOffset = markerRef.value.offsetTop\n    } else {\n      scrollVelocity = scrollTop - lastScrollTop\n    }\n\n    lastScrollTop = scrollTop\n    lastScrollTime = scrollTime\n\n    calculateVisibleItems()\n  }\n  function handleScrollend () {\n    if (!containerRef.value || !markerRef.value) return\n\n    scrollVelocity = 0\n    lastScrollTime = 0\n\n    calculateVisibleItems()\n  }\n\n  let raf = -1\n  function calculateVisibleItems () {\n    cancelAnimationFrame(raf)\n    raf = requestAnimationFrame(_calculateVisibleItems)\n  }\n  function _calculateVisibleItems () {\n    if (!containerRef.value || !viewportHeight.value) return\n    const scrollTop = lastScrollTop - markerOffset\n    const direction = Math.sign(scrollVelocity)\n\n    const startPx = Math.max(0, scrollTop - BUFFER_PX)\n    const start = clamp(calculateIndex(startPx), 0, items.value.length)\n\n    const endPx = scrollTop + viewportHeight.value + BUFFER_PX\n    const end = clamp(calculateIndex(endPx) + 1, start + 1, items.value.length)\n\n    if (\n      // Only update the side we're scrolling towards,\n      // the other side will be updated incidentally\n      (direction !== UP || start < first.value) &&\n      (direction !== DOWN || end > last.value)\n    ) {\n      const topOverflow = calculateOffset(first.value) - calculateOffset(start)\n      const bottomOverflow = calculateOffset(end) - calculateOffset(last.value)\n      const bufferOverflow = Math.max(topOverflow, bottomOverflow)\n\n      if (bufferOverflow > BUFFER_PX) {\n        first.value = start\n        last.value = end\n      } else {\n        // Only update the side that's reached its limit if there's still buffer left\n        if (start <= 0) first.value = start\n        if (end >= items.value.length) last.value = end\n      }\n    }\n\n    paddingTop.value = calculateOffset(first.value)\n    paddingBottom.value = calculateOffset(items.value.length) - calculateOffset(last.value)\n  }\n\n  function scrollToIndex (index: number) {\n    const offset = calculateOffset(index)\n    if (!containerRef.value || (index && !offset)) {\n      targetScrollIndex = index\n    } else {\n      containerRef.value.scrollTop = offset\n    }\n  }\n\n  const computedItems = computed(() => {\n    return items.value.slice(first.value, last.value).map((item, index) => ({\n      raw: item,\n      index: index + first.value,\n    }))\n  })\n\n  watch(items, () => {\n    sizes = Array.from({ length: items.value.length })\n    offsets = Array.from({ length: items.value.length })\n    updateOffsets.immediate()\n    calculateVisibleItems()\n  }, { deep: true })\n\n  return {\n    containerRef,\n    markerRef,\n    computedItems,\n    paddingTop,\n    paddingBottom,\n    scrollToIndex,\n    handleScroll,\n    handleScrollend,\n    handleItemResize,\n  }\n}\n\n// https://gist.github.com/robertleeplummerjr/1cc657191d34ecd0a324\nfunction binaryClosest (arr: ArrayLike<number>, val: number) {\n  let high = arr.length - 1\n  let low = 0\n  let mid = 0\n  let item = null\n  let target = -1\n\n  if (arr[high]! < val) {\n    return high\n  }\n\n  while (low <= high) {\n    mid = (low + high) >> 1\n    item = arr[mid]!\n\n    if (item > val) {\n      high = mid - 1\n    } else if (item < val) {\n      target = mid\n      low = mid + 1\n    } else if (item === val) {\n      return mid\n    } else {\n      return low\n    }\n  }\n\n  return target\n}\n", "// Utilities\nimport { shallowRef, watch } from 'vue'\n\n// Types\nimport type { Ref } from 'vue'\nimport type { VList } from '@/components/VList'\nimport type { VTextField } from '@/components/VTextField'\n\nexport function useScrolling (listRef: Ref<VList | undefined>, textFieldRef: Ref<VTextField | undefined>) {\n  const isScrolling = shallowRef(false)\n  let scrollTimeout: number\n  function onListScroll (e: Event) {\n    cancelAnimationFrame(scrollTimeout)\n    isScrolling.value = true\n    scrollTimeout = requestAnimationFrame(() => {\n      scrollTimeout = requestAnimationFrame(() => {\n        isScrolling.value = false\n      })\n    })\n  }\n  async function finishScrolling () {\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise<void>(resolve => {\n      if (isScrolling.value) {\n        const stop = watch(isScrolling, () => {\n          stop()\n          resolve()\n        })\n      } else resolve()\n    })\n  }\n  async function onListKeydown (e: KeyboardEvent) {\n    if (e.key === 'Tab') {\n      textFieldRef.value?.focus()\n    }\n\n    if (!['PageDown', 'PageUp', 'Home', 'End'].includes(e.key)) return\n    const el: HTMLElement = listRef.value?.$el\n    if (!el) return\n\n    if (e.key === 'Home' || e.key === 'End') {\n      el.scrollTo({\n        top: e.key === 'Home' ? 0 : el.scrollHeight,\n        behavior: 'smooth',\n      })\n    }\n\n    await finishScrolling()\n\n    const children = el.querySelectorAll(':scope > :not(.v-virtual-scroll__spacer)')\n\n    if (e.key === 'PageDown' || e.key === 'Home') {\n      const top = el.getBoundingClientRect().top\n      for (const child of children) {\n        if (child.getBoundingClientRect().top >= top) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    } else {\n      const bottom = el.getBoundingClientRect().bottom\n      for (const child of [...children].reverse()) {\n        if (child.getBoundingClientRect().bottom <= bottom) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    }\n  }\n\n  return { onListScroll, onListKeydown }\n}\n"],
  "mappings": "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",
  "names": ["bias", "val", "c", "x", "Math", "abs", "sign", "calculateUpdatedOffset", "_ref", "selectedElement", "containerSize", "contentSize", "isRtl", "currentScrollOffset", "isHorizontal", "clientSize", "clientWidth", "clientHeight", "offsetStart", "offsetLeft", "offsetTop", "adjustedOffsetStart", "totalSize", "itemOffset", "additionalOffset", "max", "min", "calculateCenteredOffset", "_ref2", "offsetCentered", "VSlideGroupSymbol", "Symbol", "for", "makeVSlideGroupProps", "propsFactory", "centerActive", "Boolean", "direction", "type", "String", "default", "symbol", "nextIcon", "IconValue", "prevIcon", "showArrows", "validator", "v", "includes", "makeComponentProps", "makeDisplayProps", "makeTagProps", "makeGroupProps", "selectedClass", "VSlideGroup", "genericComponent", "name", "props", "emits", "value", "setup", "_ref", "slots", "isRtl", "useRtl", "displayClasses", "mobile", "useDisplay", "group", "useGroup", "isOverflowing", "shallowRef", "scrollOffset", "containerSize", "contentSize", "isHorizontal", "computed", "resizeRef", "containerRef", "contentRect", "containerRect", "useResizeObserver", "contentRef", "firstSelectedIndex", "selected", "length", "items", "findIndex", "item", "id", "lastSelectedIndex", "IN_BROWSER", "frame", "watch", "cancelAnimationFrame", "requestAnimationFrame", "sizeProperty", "selectedElement", "children", "calculateCenteredOffset", "calculateUpdatedOffset", "currentScrollOffset", "disableTransition", "startTouch", "startOffset", "onTouchstart", "e", "sign", "touches", "onTouchmove", "onTouchend", "maxScrollOffset", "onScroll", "isFocused", "onFocusin", "el", "composedPath", "onFocusout", "onFocus", "relatedTarget", "contains", "focus", "onKeydown", "key", "location", "focusable", "focusableChildren", "querySelector", "nextElementSibling", "previousElementSibling", "firstElementChild", "lastElementChild", "scrollTo", "newAbsoluteOffset", "clamp", "contentStyles", "scrollAmount", "bias", "transform", "transition", "willChange", "slotProps", "next", "prev", "select", "isSelected", "hasAffixes", "Math", "abs", "hasPrev", "hasNext", "useRender", "_createVNode", "tag", "class", "style", "onClick", "VFadeTransition", "VIcon", "VChipGroupSymbol", "Symbol", "for", "makeVChipGroupProps", "propsFactory", "column", "Boolean", "filter", "valueComparator", "type", "Function", "default", "deepEqual", "makeVSlideGroupProps", "makeComponentProps", "makeGroupProps", "selectedClass", "makeTagProps", "makeThemeProps", "makeVariantProps", "variant", "VChipGroup", "genericComponent", "name", "props", "emits", "value", "setup", "_ref", "slots", "themeClasses", "provideTheme", "isSelected", "select", "next", "prev", "selected", "useGroup", "provideDefaults", "VChip", "color", "toRef", "disabled", "useRender", "slideGroupProps", "VSlideGroup", "filterProps", "_createVNode", "_mergeProps", "class", "style", "makeVChipProps", "propsFactory", "activeClass", "String", "appendAvatar", "appendIcon", "IconValue", "closable", "Boolean", "closeIcon", "type", "default", "closeLabel", "draggable", "filter", "filterIcon", "label", "link", "undefined", "pill", "prependAvatar", "prependIcon", "ripple", "Object", "text", "modelValue", "onClick", "EventProp", "onClickOnce", "makeBorderProps", "makeComponentProps", "makeDensityProps", "makeElevationProps", "makeGroupItemProps", "makeRoundedProps", "makeRouterProps", "makeSizeProps", "makeTagProps", "tag", "makeThemeProps", "makeVariantProps", "variant", "VChip", "genericComponent", "name", "directives", "Ripple", "props", "emits", "e", "value", "val", "click", "setup", "_ref", "attrs", "emit", "slots", "t", "useLocale", "borderClasses", "useBorder", "colorClasses", "colorStyles", "variantClasses", "useVariant", "densityClasses", "useDensity", "elevationClasses", "useElevation", "roundedClasses", "useRounded", "sizeClasses", "useSize", "themeClasses", "provideTheme", "isActive", "useProxiedModel", "group", "useGroupItem", "VChipGroupSymbol", "useLink", "isLink", "computed", "isClickable", "disabled", "closeProps", "preventDefault", "stopPropagation", "navigate", "toggle", "onKeyDown", "key", "Tag", "hasAppendMedia", "hasAppend", "append", "hasClose", "close", "hasFilter", "hasPrependMedia", "hasPrepend", "prepend", "hasColor", "isSelected", "_withDirectives", "_createVNode", "selectedClass", "class", "style", "href", "genOverlays", "VExpandXTransition", "VIcon", "VDefaultsProvider", "icon", "_vShow", "_Fragment", "VAvatar", "image", "start", "select", "end", "_mergeProps", "size", "_resolveDirective", "makeVMenuProps", "propsFactory", "id", "String", "omit", "makeVOverlayProps", "closeDelay", "closeOnContentClick", "locationStrategy", "openDelay", "scrim", "scrollStrategy", "transition", "component", "VDialogTransition", "VMenu", "genericComponent", "name", "props", "emits", "value", "setup", "_ref", "slots", "isActive", "useProxiedModel", "scopeId", "useScopeId", "uid", "getUid", "computed", "overlay", "ref", "parent", "inject", "VMenuSymbol", "openChildren", "shallowRef", "provide", "register", "unregister", "closeParents", "e", "setTimeout", "isClickInsideElement", "contentEl", "onFocusIn", "before", "relatedTarget", "after", "target", "nextTick", "globalTop", "document", "includes", "contains", "focusable", "focusableChildren", "focus", "watch", "val", "addEventListener", "once", "removeEventListener", "onClickOutside", "onKeydown", "disabled", "key", "nextElement", "getNextElement", "shiftKey", "el", "tabIndex", "activatorEl", "onActivatorKeydown", "preventDefault", "focusChild", "activatorProps", "mergeProps", "useRender", "overlayProps", "VOverlay", "filterProps", "_createVNode", "_mergeProps", "class", "style", "$event", "activator", "default", "_len", "arguments", "length", "args", "Array", "_key", "VDefaultsProvider", "forwardRefs", "Î¨openChildren", "makeVVirtualScrollItemProps", "propsFactory", "renderless", "Boolean", "makeComponentProps", "VVirtualScrollItem", "genericComponent", "name", "inheritAttrs", "props", "emits", "height", "setup", "_ref", "attrs", "emit", "slots", "resizeRef", "contentRect", "useResizeObserver", "undefined", "watch", "value", "useRender", "_createVNode", "_Fragment", "default", "itemRef", "_mergeProps", "class", "style", "UP", "DOWN", "BUFFER_PX", "makeVirtualProps", "propsFactory", "itemHeight", "type", "Number", "String", "default", "height", "useVirtual", "props", "items", "display", "useDisplay", "shallowRef", "watchEffect", "value", "parseFloat", "first", "last", "Math", "ceil", "parseInt", "paddingTop", "paddingBottom", "containerRef", "ref", "markerRef", "markerOffset", "resizeRef", "contentRect", "useResizeObserver", "viewportHeight", "computed", "document", "documentElement", "hasInitialRender", "sizes", "Array", "from", "length", "offsets", "updateTime", "targetScrollIndex", "getSize", "index", "updateOffsets", "debounce", "start", "performance", "now", "i", "max", "unwatch", "watch", "v", "offsetTop", "immediate", "calculateVisibleItems", "nextTick", "IN_BROWSER", "window", "requestAnimationFrame", "scrollToIndex", "onScopeDispose", "clear", "handleItemResize", "prevHeight", "prevMinHeight", "min", "calculateOffset", "clamp", "calculateIndex", "scrollTop", "binaryClosest", "lastScrollTop", "scrollVelocity", "lastScrollTime", "val", "oldVal", "handleScroll", "scrollTime", "scrollDeltaT", "sign", "handleScrollend", "raf", "cancelAnimationFrame", "_calculateVisibleItems", "direction", "startPx", "endPx", "end", "topOverflow", "bottomOverflow", "bufferOverflow", "offset", "computedItems", "slice", "map", "item", "raw", "deep", "arr", "high", "low", "mid", "target", "makeVVirtualScrollProps", "propsFactory", "items", "type", "Array", "default", "renderless", "Boolean", "makeVirtualProps", "makeComponentProps", "makeDimensionProps", "VVirtualScroll", "genericComponent", "name", "props", "setup", "_ref", "slots", "vm", "getCurrentInstance", "dimensionStyles", "useDimension", "containerRef", "markerRef", "handleScroll", "handleScrollend", "handleItemResize", "scrollToIndex", "paddingTop", "paddingBottom", "computedItems", "useVirtual", "toRef", "useToggleScope", "handleListeners", "add", "arguments", "length", "undefined", "method", "value", "document", "documentElement", "passive", "onMounted", "getScrollParent", "vnode", "el", "onScopeDispose", "useRender", "children", "map", "item", "_createVNode", "VVirtualScrollItem", "index", "height", "slotProps", "raw", "_Fragment", "convertToUnit", "class", "style", "useScrolling", "listRef", "textFieldRef", "isScrolling", "shallowRef", "scrollTimeout", "onListScroll", "e", "cancelAnimationFrame", "value", "requestAnimationFrame", "finishScrolling", "Promise", "resolve", "stop", "watch", "onListKeydown", "key", "focus", "includes", "el", "$el", "scrollTo", "top", "scrollHeight", "behavior", "children", "querySelectorAll", "getBoundingClientRect", "child", "bottom", "reverse", "makeSelectProps", "propsFactory", "chips", "Boolean", "closableChips", "closeText", "type", "String", "default", "openText", "eager", "hideNoData", "hideSelected", "listProps", "Object", "menu", "menuIcon", "IconValue", "menuProps", "multiple", "noDataText", "openOnClear", "itemColor", "makeItemsProps", "itemChildren", "makeVSelectProps", "omit", "makeVTextFieldProps", "modelValue", "role", "makeTransitionProps", "transition", "component", "VDialogTransition", "VSelect", "genericComponent", "name", "props", "emits", "focused", "value", "ue", "setup", "_ref", "slots", "t", "useLocale", "vTextFieldRef", "ref", "vMenuRef", "vVirtualScrollRef", "_menu", "useProxiedModel", "computed", "get", "set", "v", "Î¨openChildren", "items", "transformIn", "transformOut", "useItems", "model", "wrapInArray", "transformed", "counterValue", "length", "form", "useForm", "selectedValues", "map", "selection", "isFocused", "shallowRef", "label", "keyboardLookupPrefix", "keyboardLookupLastTime", "displayItems", "filter", "item", "some", "s", "menuDisabled", "readonly", "isReadonly", "computedMenuProps", "activatorProps", "listRef", "onListScroll", "onListKeydown", "useScrolling", "onClear", "e", "onMousedownControl", "onKeydown", "key", "includes", "preventDefault", "focus", "KEYBOARD_LOOKUP_THRESHOLD", "checkPrintable", "isPrintableChar", "noModifier", "ctrlKey", "metaKey", "altKey", "now", "performance", "toLowerCase", "find", "title", "startsWith", "undefined", "select", "arguments", "disabled", "index", "findIndex", "valueComparator", "add", "splice", "nextTick", "onBlur", "$el", "contains", "relatedTarget", "onAfterLeave", "onFocusin", "onModelUpdate", "matchesSelector", "watch", "IN_BROWSER", "window", "requestAnimationFrame", "scrollToIndex", "newVal", "oldVal", "useRender", "hasChips", "chip", "hasList", "isDirty", "textFieldProps", "VTextField", "filterProps", "placeholder", "persistentPlaceholder", "_createVNode", "_mergeProps", "join", "$event", "externalValue", "class", "style", "_Fragment", "VMenu", "VList", "color", "VListItem", "VVirtualScroll", "_ref2", "itemRef", "itemProps", "mergeProps", "onClick", "prepend", "_ref3", "isSelected", "VCheckboxBtn", "prependAvatar", "VAvatar", "prependIcon", "VIcon", "onChipClose", "stopPropagation", "slotProps", "onMousedown", "hasSlot", "slotContent", "ensureValidVNode", "VChip", "VDefaultsProvider", "closable", "size", "text", "_createTextVNode", "_len", "args", "Array", "_key", "forwardRefs"]
}
